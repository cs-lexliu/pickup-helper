// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: DeliveryManager/models.proto

package deliverymanagerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StandardDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId          string `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Status              string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TrackingCode        string `protobuf:"bytes,3,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	ShippingLabel       string `protobuf:"bytes,4,opt,name=shipping_label,json=shippingLabel,proto3" json:"shipping_label,omitempty"`
	ShippingQrCode      string `protobuf:"bytes,5,opt,name=shipping_qr_code,json=shippingQrCode,proto3" json:"shipping_qr_code,omitempty"`
	DeliveryFee         string `protobuf:"bytes,6,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	DeliveryCost        string `protobuf:"bytes,7,opt,name=delivery_cost,json=deliveryCost,proto3" json:"delivery_cost,omitempty"`
	SenderDeliveryFee   string `protobuf:"bytes,8,opt,name=sender_delivery_fee,json=senderDeliveryFee,proto3" json:"sender_delivery_fee,omitempty"`
	ReceiverDeliveryFee string `protobuf:"bytes,9,opt,name=receiver_delivery_fee,json=receiverDeliveryFee,proto3" json:"receiver_delivery_fee,omitempty"`
	SenderId            string `protobuf:"bytes,10,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderContactInfo   string `protobuf:"bytes,11,opt,name=sender_contact_info,json=senderContactInfo,proto3" json:"sender_contact_info,omitempty"`
	SenderAddress       string `protobuf:"bytes,12,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	ReceiverId          string `protobuf:"bytes,13,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ReceiverContactInfo string `protobuf:"bytes,14,opt,name=receiver_contact_info,json=receiverContactInfo,proto3" json:"receiver_contact_info,omitempty"`
	ReceiverAddress     string `protobuf:"bytes,15,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	Weight              string `protobuf:"bytes,16,opt,name=weight,proto3" json:"weight,omitempty"`
	Length              string `protobuf:"bytes,17,opt,name=length,proto3" json:"length,omitempty"`
	Width               string `protobuf:"bytes,18,opt,name=width,proto3" json:"width,omitempty"`
	Height              string `protobuf:"bytes,19,opt,name=height,proto3" json:"height,omitempty"`
	Courier             string `protobuf:"bytes,20,opt,name=courier,proto3" json:"courier,omitempty"`
	Country             string `protobuf:"bytes,21,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *StandardDelivery) Reset() {
	*x = StandardDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardDelivery) ProtoMessage() {}

func (x *StandardDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardDelivery.ProtoReflect.Descriptor instead.
func (*StandardDelivery) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{0}
}

func (x *StandardDelivery) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *StandardDelivery) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StandardDelivery) GetTrackingCode() string {
	if x != nil {
		return x.TrackingCode
	}
	return ""
}

func (x *StandardDelivery) GetShippingLabel() string {
	if x != nil {
		return x.ShippingLabel
	}
	return ""
}

func (x *StandardDelivery) GetShippingQrCode() string {
	if x != nil {
		return x.ShippingQrCode
	}
	return ""
}

func (x *StandardDelivery) GetDeliveryFee() string {
	if x != nil {
		return x.DeliveryFee
	}
	return ""
}

func (x *StandardDelivery) GetDeliveryCost() string {
	if x != nil {
		return x.DeliveryCost
	}
	return ""
}

func (x *StandardDelivery) GetSenderDeliveryFee() string {
	if x != nil {
		return x.SenderDeliveryFee
	}
	return ""
}

func (x *StandardDelivery) GetReceiverDeliveryFee() string {
	if x != nil {
		return x.ReceiverDeliveryFee
	}
	return ""
}

func (x *StandardDelivery) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *StandardDelivery) GetSenderContactInfo() string {
	if x != nil {
		return x.SenderContactInfo
	}
	return ""
}

func (x *StandardDelivery) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *StandardDelivery) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *StandardDelivery) GetReceiverContactInfo() string {
	if x != nil {
		return x.ReceiverContactInfo
	}
	return ""
}

func (x *StandardDelivery) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *StandardDelivery) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *StandardDelivery) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *StandardDelivery) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *StandardDelivery) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *StandardDelivery) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *StandardDelivery) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type D2DDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId             string                 `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Status                 string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TrackingCode           string                 `protobuf:"bytes,3,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	TrackingLabelUrl       string                 `protobuf:"bytes,4,opt,name=tracking_label_url,json=trackingLabelUrl,proto3" json:"tracking_label_url,omitempty"`
	IsPaperless            bool                   `protobuf:"varint,5,opt,name=is_paperless,json=isPaperless,proto3" json:"is_paperless,omitempty"`
	DeliveryFee            string                 `protobuf:"bytes,6,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	DeliveryCost           string                 `protobuf:"bytes,7,opt,name=delivery_cost,json=deliveryCost,proto3" json:"delivery_cost,omitempty"`
	SenderDeliveryFee      string                 `protobuf:"bytes,8,opt,name=sender_delivery_fee,json=senderDeliveryFee,proto3" json:"sender_delivery_fee,omitempty"`
	ReceiverDeliveryFee    string                 `protobuf:"bytes,9,opt,name=receiver_delivery_fee,json=receiverDeliveryFee,proto3" json:"receiver_delivery_fee,omitempty"`
	SenderId               string                 `protobuf:"bytes,10,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	PickupContactInfo      *ContactInfo           `protobuf:"bytes,11,opt,name=pickup_contact_info,json=pickupContactInfo,proto3" json:"pickup_contact_info,omitempty"`
	PickupAddress          *Address               `protobuf:"bytes,12,opt,name=pickup_address,json=pickupAddress,proto3" json:"pickup_address,omitempty"`
	PickupTimeStartAt      string                 `protobuf:"bytes,13,opt,name=pickup_time_start_at,json=pickupTimeStartAt,proto3" json:"pickup_time_start_at,omitempty"`
	PickupTimeEndAt        string                 `protobuf:"bytes,14,opt,name=pickup_time_end_at,json=pickupTimeEndAt,proto3" json:"pickup_time_end_at,omitempty"`
	ReceiverId             string                 `protobuf:"bytes,15,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ReceiverContactInfo    *ContactInfo           `protobuf:"bytes,16,opt,name=receiver_contact_info,json=receiverContactInfo,proto3" json:"receiver_contact_info,omitempty"`
	ReceiverAddress        *Address               `protobuf:"bytes,17,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	Weight                 string                 `protobuf:"bytes,18,opt,name=weight,proto3" json:"weight,omitempty"`
	Length                 string                 `protobuf:"bytes,19,opt,name=length,proto3" json:"length,omitempty"`
	Width                  string                 `protobuf:"bytes,20,opt,name=width,proto3" json:"width,omitempty"`
	Height                 string                 `protobuf:"bytes,21,opt,name=height,proto3" json:"height,omitempty"`
	Courier                string                 `protobuf:"bytes,22,opt,name=courier,proto3" json:"courier,omitempty"`
	Country                string                 `protobuf:"bytes,23,opt,name=country,proto3" json:"country,omitempty"`
	EstimatedTimeOfArrival *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=estimated_time_of_arrival,json=estimatedTimeOfArrival,proto3" json:"estimated_time_of_arrival,omitempty"`
	ExpectedExpiryTime     *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=expected_expiry_time,json=expectedExpiryTime,proto3" json:"expected_expiry_time,omitempty"`
}

func (x *D2DDelivery) Reset() {
	*x = D2DDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D2DDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D2DDelivery) ProtoMessage() {}

func (x *D2DDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D2DDelivery.ProtoReflect.Descriptor instead.
func (*D2DDelivery) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{1}
}

func (x *D2DDelivery) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *D2DDelivery) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *D2DDelivery) GetTrackingCode() string {
	if x != nil {
		return x.TrackingCode
	}
	return ""
}

func (x *D2DDelivery) GetTrackingLabelUrl() string {
	if x != nil {
		return x.TrackingLabelUrl
	}
	return ""
}

func (x *D2DDelivery) GetIsPaperless() bool {
	if x != nil {
		return x.IsPaperless
	}
	return false
}

func (x *D2DDelivery) GetDeliveryFee() string {
	if x != nil {
		return x.DeliveryFee
	}
	return ""
}

func (x *D2DDelivery) GetDeliveryCost() string {
	if x != nil {
		return x.DeliveryCost
	}
	return ""
}

func (x *D2DDelivery) GetSenderDeliveryFee() string {
	if x != nil {
		return x.SenderDeliveryFee
	}
	return ""
}

func (x *D2DDelivery) GetReceiverDeliveryFee() string {
	if x != nil {
		return x.ReceiverDeliveryFee
	}
	return ""
}

func (x *D2DDelivery) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *D2DDelivery) GetPickupContactInfo() *ContactInfo {
	if x != nil {
		return x.PickupContactInfo
	}
	return nil
}

func (x *D2DDelivery) GetPickupAddress() *Address {
	if x != nil {
		return x.PickupAddress
	}
	return nil
}

func (x *D2DDelivery) GetPickupTimeStartAt() string {
	if x != nil {
		return x.PickupTimeStartAt
	}
	return ""
}

func (x *D2DDelivery) GetPickupTimeEndAt() string {
	if x != nil {
		return x.PickupTimeEndAt
	}
	return ""
}

func (x *D2DDelivery) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *D2DDelivery) GetReceiverContactInfo() *ContactInfo {
	if x != nil {
		return x.ReceiverContactInfo
	}
	return nil
}

func (x *D2DDelivery) GetReceiverAddress() *Address {
	if x != nil {
		return x.ReceiverAddress
	}
	return nil
}

func (x *D2DDelivery) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *D2DDelivery) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *D2DDelivery) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *D2DDelivery) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *D2DDelivery) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *D2DDelivery) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *D2DDelivery) GetEstimatedTimeOfArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedTimeOfArrival
	}
	return nil
}

func (x *D2DDelivery) GetExpectedExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedExpiryTime
	}
	return nil
}

type CustomDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId          string `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Status              string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TrackingCode        string `protobuf:"bytes,3,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	DeliveryFee         string `protobuf:"bytes,4,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	DeliveryCost        string `protobuf:"bytes,5,opt,name=delivery_cost,json=deliveryCost,proto3" json:"delivery_cost,omitempty"`
	SenderDeliveryFee   string `protobuf:"bytes,6,opt,name=sender_delivery_fee,json=senderDeliveryFee,proto3" json:"sender_delivery_fee,omitempty"`
	ReceiverDeliveryFee string `protobuf:"bytes,7,opt,name=receiver_delivery_fee,json=receiverDeliveryFee,proto3" json:"receiver_delivery_fee,omitempty"`
	SenderId            string `protobuf:"bytes,8,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderContactInfo   string `protobuf:"bytes,9,opt,name=sender_contact_info,json=senderContactInfo,proto3" json:"sender_contact_info,omitempty"`
	SenderAddress       string `protobuf:"bytes,10,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	ReceiverId          string `protobuf:"bytes,11,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ReceiverContactInfo string `protobuf:"bytes,12,opt,name=receiver_contact_info,json=receiverContactInfo,proto3" json:"receiver_contact_info,omitempty"`
	ReceiverAddress     string `protobuf:"bytes,13,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	Weight              string `protobuf:"bytes,14,opt,name=weight,proto3" json:"weight,omitempty"`
	Length              string `protobuf:"bytes,15,opt,name=length,proto3" json:"length,omitempty"`
	Width               string `protobuf:"bytes,16,opt,name=width,proto3" json:"width,omitempty"`
	Height              string `protobuf:"bytes,17,opt,name=height,proto3" json:"height,omitempty"`
	Courier             string `protobuf:"bytes,18,opt,name=courier,proto3" json:"courier,omitempty"`
	Country             string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	DeliveryType        string `protobuf:"bytes,20,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	DeliveryProvider    string `protobuf:"bytes,21,opt,name=delivery_provider,json=deliveryProvider,proto3" json:"delivery_provider,omitempty"`
	IsTracked           bool   `protobuf:"varint,22,opt,name=is_tracked,json=isTracked,proto3" json:"is_tracked,omitempty"`
}

func (x *CustomDelivery) Reset() {
	*x = CustomDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDelivery) ProtoMessage() {}

func (x *CustomDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDelivery.ProtoReflect.Descriptor instead.
func (*CustomDelivery) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{2}
}

func (x *CustomDelivery) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *CustomDelivery) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CustomDelivery) GetTrackingCode() string {
	if x != nil {
		return x.TrackingCode
	}
	return ""
}

func (x *CustomDelivery) GetDeliveryFee() string {
	if x != nil {
		return x.DeliveryFee
	}
	return ""
}

func (x *CustomDelivery) GetDeliveryCost() string {
	if x != nil {
		return x.DeliveryCost
	}
	return ""
}

func (x *CustomDelivery) GetSenderDeliveryFee() string {
	if x != nil {
		return x.SenderDeliveryFee
	}
	return ""
}

func (x *CustomDelivery) GetReceiverDeliveryFee() string {
	if x != nil {
		return x.ReceiverDeliveryFee
	}
	return ""
}

func (x *CustomDelivery) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *CustomDelivery) GetSenderContactInfo() string {
	if x != nil {
		return x.SenderContactInfo
	}
	return ""
}

func (x *CustomDelivery) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *CustomDelivery) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *CustomDelivery) GetReceiverContactInfo() string {
	if x != nil {
		return x.ReceiverContactInfo
	}
	return ""
}

func (x *CustomDelivery) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *CustomDelivery) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *CustomDelivery) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *CustomDelivery) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *CustomDelivery) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *CustomDelivery) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *CustomDelivery) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CustomDelivery) GetDeliveryType() string {
	if x != nil {
		return x.DeliveryType
	}
	return ""
}

func (x *CustomDelivery) GetDeliveryProvider() string {
	if x != nil {
		return x.DeliveryProvider
	}
	return ""
}

func (x *CustomDelivery) GetIsTracked() bool {
	if x != nil {
		return x.IsTracked
	}
	return false
}

type DeliveryView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId             string                 `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	FamilyId               string                 `protobuf:"bytes,2,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	CourierId              string                 `protobuf:"bytes,3,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	CountryId              string                 `protobuf:"bytes,4,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	TrackingCode           string                 `protobuf:"bytes,5,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	Weight                 string                 `protobuf:"bytes,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Length                 string                 `protobuf:"bytes,7,opt,name=length,proto3" json:"length,omitempty"`
	Width                  string                 `protobuf:"bytes,8,opt,name=width,proto3" json:"width,omitempty"`
	Height                 string                 `protobuf:"bytes,9,opt,name=height,proto3" json:"height,omitempty"`
	DeliveryFee            string                 `protobuf:"bytes,10,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	DeliveryCost           string                 `protobuf:"bytes,11,opt,name=delivery_cost,json=deliveryCost,proto3" json:"delivery_cost,omitempty"`
	SenderDeliveryFee      string                 `protobuf:"bytes,12,opt,name=sender_delivery_fee,json=senderDeliveryFee,proto3" json:"sender_delivery_fee,omitempty"`
	ReceiverDeliveryFee    string                 `protobuf:"bytes,13,opt,name=receiver_delivery_fee,json=receiverDeliveryFee,proto3" json:"receiver_delivery_fee,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TrackingLabelUrl       string                 `protobuf:"bytes,16,opt,name=tracking_label_url,json=trackingLabelUrl,proto3" json:"tracking_label_url,omitempty"`
	SenderName             string                 `protobuf:"bytes,17,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	SenderPhone            string                 `protobuf:"bytes,18,opt,name=sender_phone,json=senderPhone,proto3" json:"sender_phone,omitempty"`
	SenderAddress          string                 `protobuf:"bytes,19,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	ReceiverName           string                 `protobuf:"bytes,20,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`
	ReceiverPhone          string                 `protobuf:"bytes,21,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`
	ReceiverAddress        string                 `protobuf:"bytes,22,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	EstimatedTimeOfArrival *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=estimated_time_of_arrival,json=estimatedTimeOfArrival,proto3" json:"estimated_time_of_arrival,omitempty"`
	ExpectedExpiryTime     *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=expected_expiry_time,json=expectedExpiryTime,proto3" json:"expected_expiry_time,omitempty"`
	// standard delivery 30-49
	// d2d delivery 50-69
	D2DIsPaperless    bool          `protobuf:"varint,50,opt,name=d2d_is_paperless,json=d2dIsPaperless,proto3" json:"d2d_is_paperless,omitempty"`
	D2DPickupDatetime *DateTimeSlot `protobuf:"bytes,51,opt,name=d2d_pickup_datetime,json=d2dPickupDatetime,proto3" json:"d2d_pickup_datetime,omitempty"`
	// custom delivery 70-89
	CustomIsTracked    bool   `protobuf:"varint,70,opt,name=custom_is_tracked,json=customIsTracked,proto3" json:"custom_is_tracked,omitempty"`
	CustomDeliveryType string `protobuf:"bytes,71,opt,name=custom_delivery_type,json=customDeliveryType,proto3" json:"custom_delivery_type,omitempty"`
}

func (x *DeliveryView) Reset() {
	*x = DeliveryView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryView) ProtoMessage() {}

func (x *DeliveryView) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryView.ProtoReflect.Descriptor instead.
func (*DeliveryView) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{3}
}

func (x *DeliveryView) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *DeliveryView) GetFamilyId() string {
	if x != nil {
		return x.FamilyId
	}
	return ""
}

func (x *DeliveryView) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *DeliveryView) GetCountryId() string {
	if x != nil {
		return x.CountryId
	}
	return ""
}

func (x *DeliveryView) GetTrackingCode() string {
	if x != nil {
		return x.TrackingCode
	}
	return ""
}

func (x *DeliveryView) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *DeliveryView) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *DeliveryView) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *DeliveryView) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *DeliveryView) GetDeliveryFee() string {
	if x != nil {
		return x.DeliveryFee
	}
	return ""
}

func (x *DeliveryView) GetDeliveryCost() string {
	if x != nil {
		return x.DeliveryCost
	}
	return ""
}

func (x *DeliveryView) GetSenderDeliveryFee() string {
	if x != nil {
		return x.SenderDeliveryFee
	}
	return ""
}

func (x *DeliveryView) GetReceiverDeliveryFee() string {
	if x != nil {
		return x.ReceiverDeliveryFee
	}
	return ""
}

func (x *DeliveryView) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeliveryView) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DeliveryView) GetTrackingLabelUrl() string {
	if x != nil {
		return x.TrackingLabelUrl
	}
	return ""
}

func (x *DeliveryView) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *DeliveryView) GetSenderPhone() string {
	if x != nil {
		return x.SenderPhone
	}
	return ""
}

func (x *DeliveryView) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *DeliveryView) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *DeliveryView) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *DeliveryView) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *DeliveryView) GetEstimatedTimeOfArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedTimeOfArrival
	}
	return nil
}

func (x *DeliveryView) GetExpectedExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpectedExpiryTime
	}
	return nil
}

func (x *DeliveryView) GetD2DIsPaperless() bool {
	if x != nil {
		return x.D2DIsPaperless
	}
	return false
}

func (x *DeliveryView) GetD2DPickupDatetime() *DateTimeSlot {
	if x != nil {
		return x.D2DPickupDatetime
	}
	return nil
}

func (x *DeliveryView) GetCustomIsTracked() bool {
	if x != nil {
		return x.CustomIsTracked
	}
	return false
}

func (x *DeliveryView) GetCustomDeliveryType() string {
	if x != nil {
		return x.CustomDeliveryType
	}
	return ""
}

type ContactInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ContactInfo) Reset() {
	*x = ContactInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInfo) ProtoMessage() {}

func (x *ContactInfo) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInfo.ProtoReflect.Descriptor instead.
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{4}
}

func (x *ContactInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContactInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ContactInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	State      string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	City       string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode string `protobuf:"bytes,4,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	UnitNo     string `protobuf:"bytes,5,opt,name=unit_no,json=unitNo,proto3" json:"unit_no,omitempty"`
	Address1   string `protobuf:"bytes,6,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2   string `protobuf:"bytes,7,opt,name=address2,proto3" json:"address2,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{5}
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetUnitNo() string {
	if x != nil {
		return x.UnitNo
	}
	return ""
}

func (x *Address) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *Address) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

type DateTimeSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *DateTimeSlot) Reset() {
	*x = DateTimeSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateTimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTimeSlot) ProtoMessage() {}

func (x *DateTimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTimeSlot.ProtoReflect.Descriptor instead.
func (*DateTimeSlot) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_models_proto_rawDescGZIP(), []int{6}
}

func (x *DateTimeSlot) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *DateTimeSlot) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

var File_DeliveryManager_models_proto protoreflect.FileDescriptor

var file_DeliveryManager_models_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf3, 0x05, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xe9, 0x08, 0x0a, 0x0b, 0x44, 0x32, 0x64,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x6c, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x13, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x41, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x52, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x55, 0x0a, 0x19, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x4c, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x91, 0x06, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x32, 0x0a,
	0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xbd, 0x09, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x46, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x55, 0x0a, 0x19, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x12, 0x4c, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x64, 0x32, 0x64, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x32, 0x64, 0x49, 0x73,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x13, 0x64, 0x32, 0x64,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x11, 0x64, 0x32, 0x64, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x73, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xbf, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f,
	0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x4e,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x5e, 0x5a, 0x5c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x6f, 0x75,
	0x73, 0x65, 0x6c, 0x6c, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x3b, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_DeliveryManager_models_proto_rawDescOnce sync.Once
	file_DeliveryManager_models_proto_rawDescData = file_DeliveryManager_models_proto_rawDesc
)

func file_DeliveryManager_models_proto_rawDescGZIP() []byte {
	file_DeliveryManager_models_proto_rawDescOnce.Do(func() {
		file_DeliveryManager_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_DeliveryManager_models_proto_rawDescData)
	})
	return file_DeliveryManager_models_proto_rawDescData
}

var file_DeliveryManager_models_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_DeliveryManager_models_proto_goTypes = []interface{}{
	(*StandardDelivery)(nil),      // 0: deliverymanagerpb.StandardDelivery
	(*D2DDelivery)(nil),           // 1: deliverymanagerpb.D2dDelivery
	(*CustomDelivery)(nil),        // 2: deliverymanagerpb.CustomDelivery
	(*DeliveryView)(nil),          // 3: deliverymanagerpb.DeliveryView
	(*ContactInfo)(nil),           // 4: deliverymanagerpb.ContactInfo
	(*Address)(nil),               // 5: deliverymanagerpb.Address
	(*DateTimeSlot)(nil),          // 6: deliverymanagerpb.DateTimeSlot
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_DeliveryManager_models_proto_depIdxs = []int32{
	4,  // 0: deliverymanagerpb.D2dDelivery.pickup_contact_info:type_name -> deliverymanagerpb.ContactInfo
	5,  // 1: deliverymanagerpb.D2dDelivery.pickup_address:type_name -> deliverymanagerpb.Address
	4,  // 2: deliverymanagerpb.D2dDelivery.receiver_contact_info:type_name -> deliverymanagerpb.ContactInfo
	5,  // 3: deliverymanagerpb.D2dDelivery.receiver_address:type_name -> deliverymanagerpb.Address
	7,  // 4: deliverymanagerpb.D2dDelivery.estimated_time_of_arrival:type_name -> google.protobuf.Timestamp
	7,  // 5: deliverymanagerpb.D2dDelivery.expected_expiry_time:type_name -> google.protobuf.Timestamp
	7,  // 6: deliverymanagerpb.DeliveryView.created_at:type_name -> google.protobuf.Timestamp
	7,  // 7: deliverymanagerpb.DeliveryView.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 8: deliverymanagerpb.DeliveryView.estimated_time_of_arrival:type_name -> google.protobuf.Timestamp
	7,  // 9: deliverymanagerpb.DeliveryView.expected_expiry_time:type_name -> google.protobuf.Timestamp
	6,  // 10: deliverymanagerpb.DeliveryView.d2d_pickup_datetime:type_name -> deliverymanagerpb.DateTimeSlot
	7,  // 11: deliverymanagerpb.DateTimeSlot.start_time:type_name -> google.protobuf.Timestamp
	7,  // 12: deliverymanagerpb.DateTimeSlot.end_time:type_name -> google.protobuf.Timestamp
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_DeliveryManager_models_proto_init() }
func file_DeliveryManager_models_proto_init() {
	if File_DeliveryManager_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DeliveryManager_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D2DDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateTimeSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DeliveryManager_models_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DeliveryManager_models_proto_goTypes,
		DependencyIndexes: file_DeliveryManager_models_proto_depIdxs,
		MessageInfos:      file_DeliveryManager_models_proto_msgTypes,
	}.Build()
	File_DeliveryManager_models_proto = out.File
	file_DeliveryManager_models_proto_rawDesc = nil
	file_DeliveryManager_models_proto_goTypes = nil
	file_DeliveryManager_models_proto_depIdxs = nil
}
