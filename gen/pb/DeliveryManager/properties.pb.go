// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: DeliveryManager/properties.proto

package deliverymanagerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeliveryPropertyType int32

const (
	DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_UNSPECIFIED DeliveryPropertyType = 0
	DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_TEXT        DeliveryPropertyType = 1
	DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_BOOLEAN     DeliveryPropertyType = 2
	DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_NUMERIC     DeliveryPropertyType = 3
	DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_DOUBLE      DeliveryPropertyType = 4
	DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_OPTION      DeliveryPropertyType = 10
)

// Enum value maps for DeliveryPropertyType.
var (
	DeliveryPropertyType_name = map[int32]string{
		0:  "DELIVERY_PROPERTY_TYPE_UNSPECIFIED",
		1:  "DELIVERY_PROPERTY_TYPE_TEXT",
		2:  "DELIVERY_PROPERTY_TYPE_BOOLEAN",
		3:  "DELIVERY_PROPERTY_TYPE_NUMERIC",
		4:  "DELIVERY_PROPERTY_TYPE_DOUBLE",
		10: "DELIVERY_PROPERTY_TYPE_OPTION",
	}
	DeliveryPropertyType_value = map[string]int32{
		"DELIVERY_PROPERTY_TYPE_UNSPECIFIED": 0,
		"DELIVERY_PROPERTY_TYPE_TEXT":        1,
		"DELIVERY_PROPERTY_TYPE_BOOLEAN":     2,
		"DELIVERY_PROPERTY_TYPE_NUMERIC":     3,
		"DELIVERY_PROPERTY_TYPE_DOUBLE":      4,
		"DELIVERY_PROPERTY_TYPE_OPTION":      10,
	}
)

func (x DeliveryPropertyType) Enum() *DeliveryPropertyType {
	p := new(DeliveryPropertyType)
	*p = x
	return p
}

func (x DeliveryPropertyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryPropertyType) Descriptor() protoreflect.EnumDescriptor {
	return file_DeliveryManager_properties_proto_enumTypes[0].Descriptor()
}

func (DeliveryPropertyType) Type() protoreflect.EnumType {
	return &file_DeliveryManager_properties_proto_enumTypes[0]
}

func (x DeliveryPropertyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryPropertyType.Descriptor instead.
func (DeliveryPropertyType) EnumDescriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{0}
}

type NumericUnit int32

const (
	NumericUnit_NUMERIC_UNIT_UNSPECIFIED NumericUnit = 0
	NumericUnit_NUMERIC_UNIT_GRAM        NumericUnit = 1
	NumericUnit_NUMERIC_UNIT_CENTIMETER  NumericUnit = 2
)

// Enum value maps for NumericUnit.
var (
	NumericUnit_name = map[int32]string{
		0: "NUMERIC_UNIT_UNSPECIFIED",
		1: "NUMERIC_UNIT_GRAM",
		2: "NUMERIC_UNIT_CENTIMETER",
	}
	NumericUnit_value = map[string]int32{
		"NUMERIC_UNIT_UNSPECIFIED": 0,
		"NUMERIC_UNIT_GRAM":        1,
		"NUMERIC_UNIT_CENTIMETER":  2,
	}
)

func (x NumericUnit) Enum() *NumericUnit {
	p := new(NumericUnit)
	*p = x
	return p
}

func (x NumericUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumericUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_DeliveryManager_properties_proto_enumTypes[1].Descriptor()
}

func (NumericUnit) Type() protoreflect.EnumType {
	return &file_DeliveryManager_properties_proto_enumTypes[1]
}

func (x NumericUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumericUnit.Descriptor instead.
func (NumericUnit) EnumDescriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{1}
}

type DeliveryProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// reserved 1~9 for the property fields.
	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PropertyType DeliveryPropertyType `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3,enum=deliverymanagerpb.DeliveryPropertyType" json:"property_type,omitempty"`
	IsOptional   bool                 `protobuf:"varint,3,opt,name=is_optional,json=isOptional,proto3" json:"is_optional,omitempty"`
	// Types that are assignable to Payload:
	//	*DeliveryProperty_TextPropertyPayload
	//	*DeliveryProperty_BooleanPropertyPayload
	//	*DeliveryProperty_NumericPropertyPayload
	//	*DeliveryProperty_DecimalPropertyPayload
	//	*DeliveryProperty_DeliveryTypePropertyPayload
	//	*DeliveryProperty_RegionPropertyPayload
	//	*DeliveryProperty_RegionalDeliveryFeePropertyPayload
	//	*DeliveryProperty_DeliveryFeePaymentPayload
	//	*DeliveryProperty_BasePropertyPayload
	//	*DeliveryProperty_PackageWeightRangePropertyPayload
	//	*DeliveryProperty_ContactInformationPropertyPayload
	//	*DeliveryProperty_AddressPropertyPayload
	//	*DeliveryProperty_DeliveryProviderPropertyPayload
	Payload isDeliveryProperty_Payload `protobuf_oneof:"payload"`
}

func (x *DeliveryProperty) Reset() {
	*x = DeliveryProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryProperty) ProtoMessage() {}

func (x *DeliveryProperty) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryProperty.ProtoReflect.Descriptor instead.
func (*DeliveryProperty) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{0}
}

func (x *DeliveryProperty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeliveryProperty) GetPropertyType() DeliveryPropertyType {
	if x != nil {
		return x.PropertyType
	}
	return DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_UNSPECIFIED
}

func (x *DeliveryProperty) GetIsOptional() bool {
	if x != nil {
		return x.IsOptional
	}
	return false
}

func (m *DeliveryProperty) GetPayload() isDeliveryProperty_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *DeliveryProperty) GetTextPropertyPayload() *TextPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_TextPropertyPayload); ok {
		return x.TextPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetBooleanPropertyPayload() *BooleanPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_BooleanPropertyPayload); ok {
		return x.BooleanPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetNumericPropertyPayload() *NumericPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_NumericPropertyPayload); ok {
		return x.NumericPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetDecimalPropertyPayload() *DecimalPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_DecimalPropertyPayload); ok {
		return x.DecimalPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetDeliveryTypePropertyPayload() *DeliveryTypePropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_DeliveryTypePropertyPayload); ok {
		return x.DeliveryTypePropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetRegionPropertyPayload() *RegionPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_RegionPropertyPayload); ok {
		return x.RegionPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetRegionalDeliveryFeePropertyPayload() *RegionalDeliveryFeePropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_RegionalDeliveryFeePropertyPayload); ok {
		return x.RegionalDeliveryFeePropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetDeliveryFeePaymentPayload() *DeliveryFeePaymentPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_DeliveryFeePaymentPayload); ok {
		return x.DeliveryFeePaymentPayload
	}
	return nil
}

func (x *DeliveryProperty) GetBasePropertyPayload() *BasePropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_BasePropertyPayload); ok {
		return x.BasePropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetPackageWeightRangePropertyPayload() *PackageWeightRangePropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_PackageWeightRangePropertyPayload); ok {
		return x.PackageWeightRangePropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetContactInformationPropertyPayload() *ContactInformationPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_ContactInformationPropertyPayload); ok {
		return x.ContactInformationPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetAddressPropertyPayload() *AddressPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_AddressPropertyPayload); ok {
		return x.AddressPropertyPayload
	}
	return nil
}

func (x *DeliveryProperty) GetDeliveryProviderPropertyPayload() *CustomDeliveryProviderPropertyPayload {
	if x, ok := x.GetPayload().(*DeliveryProperty_DeliveryProviderPropertyPayload); ok {
		return x.DeliveryProviderPropertyPayload
	}
	return nil
}

type isDeliveryProperty_Payload interface {
	isDeliveryProperty_Payload()
}

type DeliveryProperty_TextPropertyPayload struct {
	// reserved 10~19 for the basic property payload.
	TextPropertyPayload *TextPropertyPayload `protobuf:"bytes,10,opt,name=text_property_payload,json=textPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_BooleanPropertyPayload struct {
	BooleanPropertyPayload *BooleanPropertyPayload `protobuf:"bytes,11,opt,name=boolean_property_payload,json=booleanPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_NumericPropertyPayload struct {
	NumericPropertyPayload *NumericPropertyPayload `protobuf:"bytes,12,opt,name=numeric_property_payload,json=numericPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_DecimalPropertyPayload struct {
	DecimalPropertyPayload *DecimalPropertyPayload `protobuf:"bytes,13,opt,name=decimal_property_payload,json=decimalPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_DeliveryTypePropertyPayload struct {
	// the index larger than 20 are the advanced property payload.
	DeliveryTypePropertyPayload *DeliveryTypePropertyPayload `protobuf:"bytes,21,opt,name=delivery_type_property_payload,json=deliveryTypePropertyPayload,proto3,oneof"`
}

type DeliveryProperty_RegionPropertyPayload struct {
	RegionPropertyPayload *RegionPropertyPayload `protobuf:"bytes,22,opt,name=region_property_payload,json=regionPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_RegionalDeliveryFeePropertyPayload struct {
	RegionalDeliveryFeePropertyPayload *RegionalDeliveryFeePropertyPayload `protobuf:"bytes,23,opt,name=regional_delivery_fee_property_payload,json=regionalDeliveryFeePropertyPayload,proto3,oneof"`
}

type DeliveryProperty_DeliveryFeePaymentPayload struct {
	// for handling split fee between seller and buyers
	DeliveryFeePaymentPayload *DeliveryFeePaymentPropertyPayload `protobuf:"bytes,28,opt,name=delivery_fee_payment_payload,json=deliveryFeePaymentPayload,proto3,oneof"`
}

type DeliveryProperty_BasePropertyPayload struct {
	BasePropertyPayload *BasePropertyPayload `protobuf:"bytes,29,opt,name=base_property_payload,json=basePropertyPayload,proto3,oneof"`
}

type DeliveryProperty_PackageWeightRangePropertyPayload struct {
	PackageWeightRangePropertyPayload *PackageWeightRangePropertyPayload `protobuf:"bytes,30,opt,name=package_weight_range_property_payload,json=packageWeightRangePropertyPayload,proto3,oneof"`
}

type DeliveryProperty_ContactInformationPropertyPayload struct {
	ContactInformationPropertyPayload *ContactInformationPropertyPayload `protobuf:"bytes,31,opt,name=contact_information_property_payload,json=contactInformationPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_AddressPropertyPayload struct {
	AddressPropertyPayload *AddressPropertyPayload `protobuf:"bytes,32,opt,name=address_property_payload,json=addressPropertyPayload,proto3,oneof"`
}

type DeliveryProperty_DeliveryProviderPropertyPayload struct {
	// used for getting all couriers
	DeliveryProviderPropertyPayload *CustomDeliveryProviderPropertyPayload `protobuf:"bytes,33,opt,name=delivery_provider_property_payload,json=deliveryProviderPropertyPayload,proto3,oneof"`
}

func (*DeliveryProperty_TextPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_BooleanPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_NumericPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_DecimalPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_DeliveryTypePropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_RegionPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_RegionalDeliveryFeePropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_DeliveryFeePaymentPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_BasePropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_PackageWeightRangePropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_ContactInformationPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_AddressPropertyPayload) isDeliveryProperty_Payload() {}

func (*DeliveryProperty_DeliveryProviderPropertyPayload) isDeliveryProperty_Payload() {}

type SelfDeliveryPropertyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryType *DeliveryTypePropertyPayload `protobuf:"bytes,1,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	IsFree       *BasePropertyPayload         `protobuf:"bytes,2,opt,name=is_free,json=isFree,proto3" json:"is_free,omitempty"`
	DeliveryFee  *DecimalPropertyPayload      `protobuf:"bytes,3,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
}

func (x *SelfDeliveryPropertyOptions) Reset() {
	*x = SelfDeliveryPropertyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfDeliveryPropertyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfDeliveryPropertyOptions) ProtoMessage() {}

func (x *SelfDeliveryPropertyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfDeliveryPropertyOptions.ProtoReflect.Descriptor instead.
func (*SelfDeliveryPropertyOptions) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{1}
}

func (x *SelfDeliveryPropertyOptions) GetDeliveryType() *DeliveryTypePropertyPayload {
	if x != nil {
		return x.DeliveryType
	}
	return nil
}

func (x *SelfDeliveryPropertyOptions) GetIsFree() *BasePropertyPayload {
	if x != nil {
		return x.IsFree
	}
	return nil
}

func (x *SelfDeliveryPropertyOptions) GetDeliveryFee() *DecimalPropertyPayload {
	if x != nil {
		return x.DeliveryFee
	}
	return nil
}

type SelfDeliveryOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTracked                  *BooleanPropertyPayload            `protobuf:"bytes,1,opt,name=is_tracked,json=isTracked,proto3" json:"is_tracked,omitempty"`
	TrackingCode               *TextPropertyPayload               `protobuf:"bytes,2,opt,name=tracking_code,json=trackingCode,proto3" json:"tracking_code,omitempty"`
	Provider                   *TextPropertyPayload               `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	IntegrationDeliveryFee     *DecimalPropertyPayload            `protobuf:"bytes,4,opt,name=integration_delivery_fee,json=integrationDeliveryFee,proto3" json:"integration_delivery_fee,omitempty"`
	SenderDeliveryFee          *DecimalPropertyPayload            `protobuf:"bytes,5,opt,name=sender_delivery_fee,json=senderDeliveryFee,proto3" json:"sender_delivery_fee,omitempty"`
	ReceiverDeliveryFee        *DecimalPropertyPayload            `protobuf:"bytes,6,opt,name=receiver_delivery_fee,json=receiverDeliveryFee,proto3" json:"receiver_delivery_fee,omitempty"`
	ReceiverContactInformation *ContactInformationPropertyPayload `protobuf:"bytes,7,opt,name=receiver_contact_information,json=receiverContactInformation,proto3" json:"receiver_contact_information,omitempty"`
	ReceiverAddress            *AddressPropertyPayload            `protobuf:"bytes,8,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	DeliveryType               *DeliveryTypePropertyPayload       `protobuf:"bytes,9,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
}

func (x *SelfDeliveryOption) Reset() {
	*x = SelfDeliveryOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfDeliveryOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfDeliveryOption) ProtoMessage() {}

func (x *SelfDeliveryOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfDeliveryOption.ProtoReflect.Descriptor instead.
func (*SelfDeliveryOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{2}
}

func (x *SelfDeliveryOption) GetIsTracked() *BooleanPropertyPayload {
	if x != nil {
		return x.IsTracked
	}
	return nil
}

func (x *SelfDeliveryOption) GetTrackingCode() *TextPropertyPayload {
	if x != nil {
		return x.TrackingCode
	}
	return nil
}

func (x *SelfDeliveryOption) GetProvider() *TextPropertyPayload {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *SelfDeliveryOption) GetIntegrationDeliveryFee() *DecimalPropertyPayload {
	if x != nil {
		return x.IntegrationDeliveryFee
	}
	return nil
}

func (x *SelfDeliveryOption) GetSenderDeliveryFee() *DecimalPropertyPayload {
	if x != nil {
		return x.SenderDeliveryFee
	}
	return nil
}

func (x *SelfDeliveryOption) GetReceiverDeliveryFee() *DecimalPropertyPayload {
	if x != nil {
		return x.ReceiverDeliveryFee
	}
	return nil
}

func (x *SelfDeliveryOption) GetReceiverContactInformation() *ContactInformationPropertyPayload {
	if x != nil {
		return x.ReceiverContactInformation
	}
	return nil
}

func (x *SelfDeliveryOption) GetReceiverAddress() *AddressPropertyPayload {
	if x != nil {
		return x.ReceiverAddress
	}
	return nil
}

func (x *SelfDeliveryOption) GetDeliveryType() *DeliveryTypePropertyPayload {
	if x != nil {
		return x.DeliveryType
	}
	return nil
}

type TextPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption string   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *TextPropertyPayload) Reset() {
	*x = TextPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextPropertyPayload) ProtoMessage() {}

func (x *TextPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextPropertyPayload.ProtoReflect.Descriptor instead.
func (*TextPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{3}
}

func (x *TextPropertyPayload) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *TextPropertyPayload) GetSelectedOption() string {
	if x != nil {
		return x.SelectedOption
	}
	return ""
}

type BooleanPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []bool `protobuf:"varint,1,rep,packed,name=options,proto3" json:"options,omitempty"`
	SelectedOption bool   `protobuf:"varint,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *BooleanPropertyPayload) Reset() {
	*x = BooleanPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanPropertyPayload) ProtoMessage() {}

func (x *BooleanPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanPropertyPayload.ProtoReflect.Descriptor instead.
func (*BooleanPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{4}
}

func (x *BooleanPropertyPayload) GetOptions() []bool {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *BooleanPropertyPayload) GetSelectedOption() bool {
	if x != nil {
		return x.SelectedOption
	}
	return false
}

type NumericPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*NumericPropertyOption `protobuf:"bytes,7,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *NumericPropertyOption   `protobuf:"bytes,8,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
	UnitV2         NumericUnit              `protobuf:"varint,9,opt,name=unit_v2,json=unitV2,proto3,enum=deliverymanagerpb.NumericUnit" json:"unit_v2,omitempty"`
}

func (x *NumericPropertyPayload) Reset() {
	*x = NumericPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericPropertyPayload) ProtoMessage() {}

func (x *NumericPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericPropertyPayload.ProtoReflect.Descriptor instead.
func (*NumericPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{5}
}

func (x *NumericPropertyPayload) GetOptions() []*NumericPropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NumericPropertyPayload) GetSelectedOption() *NumericPropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

func (x *NumericPropertyPayload) GetUnitV2() NumericUnit {
	if x != nil {
		return x.UnitV2
	}
	return NumericUnit_NUMERIC_UNIT_UNSPECIFIED
}

type NumericPropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MinValue     int32  `protobuf:"varint,2,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue     int32  `protobuf:"varint,3,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	DefaultValue int32  `protobuf:"varint,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *NumericPropertyOption) Reset() {
	*x = NumericPropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericPropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericPropertyOption) ProtoMessage() {}

func (x *NumericPropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericPropertyOption.ProtoReflect.Descriptor instead.
func (*NumericPropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{6}
}

func (x *NumericPropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NumericPropertyOption) GetMinValue() int32 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *NumericPropertyOption) GetMaxValue() int32 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *NumericPropertyOption) GetDefaultValue() int32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

type DecimalPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*DecimalPropertyOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *DecimalPropertyOption   `protobuf:"bytes,4,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
	Unit           NumericUnit              `protobuf:"varint,5,opt,name=unit,proto3,enum=deliverymanagerpb.NumericUnit" json:"unit,omitempty"`
}

func (x *DecimalPropertyPayload) Reset() {
	*x = DecimalPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecimalPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecimalPropertyPayload) ProtoMessage() {}

func (x *DecimalPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecimalPropertyPayload.ProtoReflect.Descriptor instead.
func (*DecimalPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{7}
}

func (x *DecimalPropertyPayload) GetOptions() []*DecimalPropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DecimalPropertyPayload) GetSelectedOption() *DecimalPropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

func (x *DecimalPropertyPayload) GetUnit() NumericUnit {
	if x != nil {
		return x.Unit
	}
	return NumericUnit_NUMERIC_UNIT_UNSPECIFIED
}

type DecimalPropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MinValue     string `protobuf:"bytes,2,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue     string `protobuf:"bytes,3,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	DefaultValue string `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *DecimalPropertyOption) Reset() {
	*x = DecimalPropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecimalPropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecimalPropertyOption) ProtoMessage() {}

func (x *DecimalPropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecimalPropertyOption.ProtoReflect.Descriptor instead.
func (*DecimalPropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{8}
}

func (x *DecimalPropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DecimalPropertyOption) GetMinValue() string {
	if x != nil {
		return x.MinValue
	}
	return ""
}

func (x *DecimalPropertyOption) GetMaxValue() string {
	if x != nil {
		return x.MaxValue
	}
	return ""
}

func (x *DecimalPropertyOption) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

// BasePropertyPayload - its a simple payload with id as option
type BasePropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options         []*BasePropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectionOption *BasePropertyOption   `protobuf:"bytes,2,opt,name=selection_option,json=selectionOption,proto3" json:"selection_option,omitempty"`
}

func (x *BasePropertyPayload) Reset() {
	*x = BasePropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePropertyPayload) ProtoMessage() {}

func (x *BasePropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePropertyPayload.ProtoReflect.Descriptor instead.
func (*BasePropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{9}
}

func (x *BasePropertyPayload) GetOptions() []*BasePropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *BasePropertyPayload) GetSelectionOption() *BasePropertyOption {
	if x != nil {
		return x.SelectionOption
	}
	return nil
}

type BasePropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BasePropertyOption) Reset() {
	*x = BasePropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePropertyOption) ProtoMessage() {}

func (x *BasePropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePropertyOption.ProtoReflect.Descriptor instead.
func (*BasePropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{10}
}

func (x *BasePropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ContactInformationPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*ContactInformationPropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *ContactInformationPropertyOption   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *ContactInformationPropertyPayload) Reset() {
	*x = ContactInformationPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactInformationPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInformationPropertyPayload) ProtoMessage() {}

func (x *ContactInformationPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInformationPropertyPayload.ProtoReflect.Descriptor instead.
func (*ContactInformationPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{11}
}

func (x *ContactInformationPropertyPayload) GetOptions() []*ContactInformationPropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ContactInformationPropertyPayload) GetSelectedOption() *ContactInformationPropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type ContactInformationPropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ContactInformationPropertyOption) Reset() {
	*x = ContactInformationPropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactInformationPropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInformationPropertyOption) ProtoMessage() {}

func (x *ContactInformationPropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInformationPropertyOption.ProtoReflect.Descriptor instead.
func (*ContactInformationPropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{12}
}

func (x *ContactInformationPropertyOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContactInformationPropertyOption) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ContactInformationPropertyOption) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type AddressPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*AddressPropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *AddressPropertyOption   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *AddressPropertyPayload) Reset() {
	*x = AddressPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressPropertyPayload) ProtoMessage() {}

func (x *AddressPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressPropertyPayload.ProtoReflect.Descriptor instead.
func (*AddressPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{13}
}

func (x *AddressPropertyPayload) GetOptions() []*AddressPropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AddressPropertyPayload) GetSelectedOption() *AddressPropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type AddressPropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	State      string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	City       string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode string `protobuf:"bytes,4,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	UnitNo     string `protobuf:"bytes,5,opt,name=unitNo,proto3" json:"unitNo,omitempty"`
	Address1   string `protobuf:"bytes,6,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2   string `protobuf:"bytes,7,opt,name=Address2,proto3" json:"Address2,omitempty"`
}

func (x *AddressPropertyOption) Reset() {
	*x = AddressPropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressPropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressPropertyOption) ProtoMessage() {}

func (x *AddressPropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressPropertyOption.ProtoReflect.Descriptor instead.
func (*AddressPropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{14}
}

func (x *AddressPropertyOption) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddressPropertyOption) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddressPropertyOption) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddressPropertyOption) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *AddressPropertyOption) GetUnitNo() string {
	if x != nil {
		return x.UnitNo
	}
	return ""
}

func (x *AddressPropertyOption) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *AddressPropertyOption) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

type RegionPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*BasePropertyOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *BasePropertyOption   `protobuf:"bytes,4,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *RegionPropertyPayload) Reset() {
	*x = RegionPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionPropertyPayload) ProtoMessage() {}

func (x *RegionPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionPropertyPayload.ProtoReflect.Descriptor instead.
func (*RegionPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{15}
}

func (x *RegionPropertyPayload) GetOptions() []*BasePropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *RegionPropertyPayload) GetSelectedOption() *BasePropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type RegionalDeliveryFeePropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved 1, 2 for backward compatibility
	Options        []*BasePropertyOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *BasePropertyOption   `protobuf:"bytes,4,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *RegionalDeliveryFeePropertyPayload) Reset() {
	*x = RegionalDeliveryFeePropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionalDeliveryFeePropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionalDeliveryFeePropertyPayload) ProtoMessage() {}

func (x *RegionalDeliveryFeePropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionalDeliveryFeePropertyPayload.ProtoReflect.Descriptor instead.
func (*RegionalDeliveryFeePropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{16}
}

func (x *RegionalDeliveryFeePropertyPayload) GetOptions() []*BasePropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *RegionalDeliveryFeePropertyPayload) GetSelectedOption() *BasePropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type PackageWeightRangePropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*PackageWeightRangePropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *PackageWeightRangePropertyOption   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *PackageWeightRangePropertyPayload) Reset() {
	*x = PackageWeightRangePropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageWeightRangePropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageWeightRangePropertyPayload) ProtoMessage() {}

func (x *PackageWeightRangePropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageWeightRangePropertyPayload.ProtoReflect.Descriptor instead.
func (*PackageWeightRangePropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{17}
}

func (x *PackageWeightRangePropertyPayload) GetOptions() []*PackageWeightRangePropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PackageWeightRangePropertyPayload) GetSelectedOption() *PackageWeightRangePropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type DeliveryFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryFeeId string `protobuf:"bytes,1,opt,name=delivery_fee_id,json=deliveryFeeId,proto3" json:"delivery_fee_id,omitempty"`
	Rate          string `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Cost          string `protobuf:"bytes,3,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *DeliveryFee) Reset() {
	*x = DeliveryFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryFee) ProtoMessage() {}

func (x *DeliveryFee) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryFee.ProtoReflect.Descriptor instead.
func (*DeliveryFee) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{18}
}

func (x *DeliveryFee) GetDeliveryFeeId() string {
	if x != nil {
		return x.DeliveryFeeId
	}
	return ""
}

func (x *DeliveryFee) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *DeliveryFee) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

type PackageWeightRangePropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MinValue           int32        `protobuf:"varint,2,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue           int32        `protobuf:"varint,3,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	D2DJtsPaperless    *DeliveryFee `protobuf:"bytes,4,opt,name=d2d_jts_paperless,json=d2dJtsPaperless,proto3" json:"d2d_jts_paperless,omitempty"`
	D2DJtsNonpaperless *DeliveryFee `protobuf:"bytes,5,opt,name=d2d_jts_nonpaperless,json=d2dJtsNonpaperless,proto3" json:"d2d_jts_nonpaperless,omitempty"`
	Poslaju            *DeliveryFee `protobuf:"bytes,6,opt,name=poslaju,proto3" json:"poslaju,omitempty"`
	Custom             *DeliveryFee `protobuf:"bytes,7,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *PackageWeightRangePropertyOption) Reset() {
	*x = PackageWeightRangePropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageWeightRangePropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageWeightRangePropertyOption) ProtoMessage() {}

func (x *PackageWeightRangePropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageWeightRangePropertyOption.ProtoReflect.Descriptor instead.
func (*PackageWeightRangePropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{19}
}

func (x *PackageWeightRangePropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PackageWeightRangePropertyOption) GetMinValue() int32 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *PackageWeightRangePropertyOption) GetMaxValue() int32 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *PackageWeightRangePropertyOption) GetD2DJtsPaperless() *DeliveryFee {
	if x != nil {
		return x.D2DJtsPaperless
	}
	return nil
}

func (x *PackageWeightRangePropertyOption) GetD2DJtsNonpaperless() *DeliveryFee {
	if x != nil {
		return x.D2DJtsNonpaperless
	}
	return nil
}

func (x *PackageWeightRangePropertyOption) GetPoslaju() *DeliveryFee {
	if x != nil {
		return x.Poslaju
	}
	return nil
}

func (x *PackageWeightRangePropertyOption) GetCustom() *DeliveryFee {
	if x != nil {
		return x.Custom
	}
	return nil
}

type DeliveryFeePaymentPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*DeliveryFeePaymentPropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *DeliveryFeePaymentPropertyOption   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *DeliveryFeePaymentPropertyPayload) Reset() {
	*x = DeliveryFeePaymentPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryFeePaymentPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryFeePaymentPropertyPayload) ProtoMessage() {}

func (x *DeliveryFeePaymentPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryFeePaymentPropertyPayload.ProtoReflect.Descriptor instead.
func (*DeliveryFeePaymentPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{20}
}

func (x *DeliveryFeePaymentPropertyPayload) GetOptions() []*DeliveryFeePaymentPropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DeliveryFeePaymentPropertyPayload) GetSelectedOption() *DeliveryFeePaymentPropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type DeliveryFeePaymentPropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SellerDeliveryFeePercent int32  `protobuf:"varint,2,opt,name=seller_delivery_fee_percent,json=sellerDeliveryFeePercent,proto3" json:"seller_delivery_fee_percent,omitempty"` // shows seller coverage used to support case where there is unequal distribution between two
	BuyerDeliveryFeePercent  int32  `protobuf:"varint,3,opt,name=buyer_delivery_fee_percent,json=buyerDeliveryFeePercent,proto3" json:"buyer_delivery_fee_percent,omitempty"`    //shows buyer coverage used to support case where there is unequal distribution between two
}

func (x *DeliveryFeePaymentPropertyOption) Reset() {
	*x = DeliveryFeePaymentPropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryFeePaymentPropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryFeePaymentPropertyOption) ProtoMessage() {}

func (x *DeliveryFeePaymentPropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryFeePaymentPropertyOption.ProtoReflect.Descriptor instead.
func (*DeliveryFeePaymentPropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{21}
}

func (x *DeliveryFeePaymentPropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeliveryFeePaymentPropertyOption) GetSellerDeliveryFeePercent() int32 {
	if x != nil {
		return x.SellerDeliveryFeePercent
	}
	return 0
}

func (x *DeliveryFeePaymentPropertyOption) GetBuyerDeliveryFeePercent() int32 {
	if x != nil {
		return x.BuyerDeliveryFeePercent
	}
	return 0
}

type DeliveryTypePropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options                 []*DeliveryTypePropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption          *DeliveryTypePropertyOption   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
	MultipleSelectedOptions []*DeliveryTypePropertyOption `protobuf:"bytes,3,rep,name=multiple_selected_options,json=multipleSelectedOptions,proto3" json:"multiple_selected_options,omitempty"`
}

func (x *DeliveryTypePropertyPayload) Reset() {
	*x = DeliveryTypePropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryTypePropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryTypePropertyPayload) ProtoMessage() {}

func (x *DeliveryTypePropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryTypePropertyPayload.ProtoReflect.Descriptor instead.
func (*DeliveryTypePropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{22}
}

func (x *DeliveryTypePropertyPayload) GetOptions() []*DeliveryTypePropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DeliveryTypePropertyPayload) GetSelectedOption() *DeliveryTypePropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

func (x *DeliveryTypePropertyPayload) GetMultipleSelectedOptions() []*DeliveryTypePropertyOption {
	if x != nil {
		return x.MultipleSelectedOptions
	}
	return nil
}

type DeliveryTypePropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MinDay int32  `protobuf:"varint,2,opt,name=min_day,json=minDay,proto3" json:"min_day,omitempty"`
	MaxDay int32  `protobuf:"varint,3,opt,name=max_day,json=maxDay,proto3" json:"max_day,omitempty"`
}

func (x *DeliveryTypePropertyOption) Reset() {
	*x = DeliveryTypePropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryTypePropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryTypePropertyOption) ProtoMessage() {}

func (x *DeliveryTypePropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryTypePropertyOption.ProtoReflect.Descriptor instead.
func (*DeliveryTypePropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{23}
}

func (x *DeliveryTypePropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeliveryTypePropertyOption) GetMinDay() int32 {
	if x != nil {
		return x.MinDay
	}
	return 0
}

func (x *DeliveryTypePropertyOption) GetMaxDay() int32 {
	if x != nil {
		return x.MaxDay
	}
	return 0
}

type CustomDeliveryProviderPropertyPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options        []*CustomDeliveryProviderPropertyOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOption *CustomDeliveryProviderPropertyOption   `protobuf:"bytes,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
}

func (x *CustomDeliveryProviderPropertyPayload) Reset() {
	*x = CustomDeliveryProviderPropertyPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomDeliveryProviderPropertyPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDeliveryProviderPropertyPayload) ProtoMessage() {}

func (x *CustomDeliveryProviderPropertyPayload) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDeliveryProviderPropertyPayload.ProtoReflect.Descriptor instead.
func (*CustomDeliveryProviderPropertyPayload) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{24}
}

func (x *CustomDeliveryProviderPropertyPayload) GetOptions() []*CustomDeliveryProviderPropertyOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CustomDeliveryProviderPropertyPayload) GetSelectedOption() *CustomDeliveryProviderPropertyOption {
	if x != nil {
		return x.SelectedOption
	}
	return nil
}

type GetCustomDeliveryProviderPropertyOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PropertyType             DeliveryPropertyType                   `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3,enum=deliverymanagerpb.DeliveryPropertyType" json:"property_type,omitempty"`
	DeliveryProviderProperty *CustomDeliveryProviderPropertyPayload `protobuf:"bytes,3,opt,name=delivery_provider_property,json=deliveryProviderProperty,proto3" json:"delivery_provider_property,omitempty"`
}

func (x *GetCustomDeliveryProviderPropertyOptionsResponse) Reset() {
	*x = GetCustomDeliveryProviderPropertyOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomDeliveryProviderPropertyOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomDeliveryProviderPropertyOptionsResponse) ProtoMessage() {}

func (x *GetCustomDeliveryProviderPropertyOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomDeliveryProviderPropertyOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetCustomDeliveryProviderPropertyOptionsResponse) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{25}
}

func (x *GetCustomDeliveryProviderPropertyOptionsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCustomDeliveryProviderPropertyOptionsResponse) GetPropertyType() DeliveryPropertyType {
	if x != nil {
		return x.PropertyType
	}
	return DeliveryPropertyType_DELIVERY_PROPERTY_TYPE_UNSPECIFIED
}

func (x *GetCustomDeliveryProviderPropertyOptionsResponse) GetDeliveryProviderProperty() *CustomDeliveryProviderPropertyPayload {
	if x != nil {
		return x.DeliveryProviderProperty
	}
	return nil
}

type CustomDeliveryProviderPropertyOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeliveryProviderType    string `protobuf:"bytes,2,opt,name=delivery_provider_type,json=deliveryProviderType,proto3" json:"delivery_provider_type,omitempty"`
	DisplayName             string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	IconUrl                 string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IsTrackingCodeMandatory bool   `protobuf:"varint,5,opt,name=is_tracking_code_mandatory,json=isTrackingCodeMandatory,proto3" json:"is_tracking_code_mandatory,omitempty"`
	AllowTrackingLink       bool   `protobuf:"varint,6,opt,name=allow_tracking_link,json=allowTrackingLink,proto3" json:"allow_tracking_link,omitempty"`
}

func (x *CustomDeliveryProviderPropertyOption) Reset() {
	*x = CustomDeliveryProviderPropertyOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DeliveryManager_properties_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomDeliveryProviderPropertyOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDeliveryProviderPropertyOption) ProtoMessage() {}

func (x *CustomDeliveryProviderPropertyOption) ProtoReflect() protoreflect.Message {
	mi := &file_DeliveryManager_properties_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDeliveryProviderPropertyOption.ProtoReflect.Descriptor instead.
func (*CustomDeliveryProviderPropertyOption) Descriptor() ([]byte, []int) {
	return file_DeliveryManager_properties_proto_rawDescGZIP(), []int{26}
}

func (x *CustomDeliveryProviderPropertyOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomDeliveryProviderPropertyOption) GetDeliveryProviderType() string {
	if x != nil {
		return x.DeliveryProviderType
	}
	return ""
}

func (x *CustomDeliveryProviderPropertyOption) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CustomDeliveryProviderPropertyOption) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *CustomDeliveryProviderPropertyOption) GetIsTrackingCodeMandatory() bool {
	if x != nil {
		return x.IsTrackingCodeMandatory
	}
	return false
}

func (x *CustomDeliveryProviderPropertyOption) GetAllowTrackingLink() bool {
	if x != nil {
		return x.AllowTrackingLink
	}
	return false
}

var File_DeliveryManager_properties_proto protoreflect.FileDescriptor

var file_DeliveryManager_properties_proto_rawDesc = []byte{
	0x0a, 0x20, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x70, 0x62, 0x22, 0x93, 0x0d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x5c, 0x0a, 0x15, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x13, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x65, 0x0a, 0x18, 0x62, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x16, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x65,
	0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x16, 0x6e,
	0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x65, 0x0a, 0x18, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x48, 0x00, 0x52, 0x16, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x75, 0x0a, 0x1e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x1b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x62, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00,
	0x52, 0x15, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x8b, 0x01, 0x0a, 0x26, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48,
	0x00, 0x52, 0x22, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x77, 0x0a, 0x1c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x48, 0x00, 0x52, 0x19, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x5c,
	0x0a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x13, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x88, 0x01, 0x0a,
	0x25, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x48, 0x00, 0x52, 0x21, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x87, 0x01, 0x0a, 0x24, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x21,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x65, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00,
	0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x87, 0x01, 0x0a, 0x22, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48,
	0x00, 0x52, 0x1f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4a, 0x04, 0x08,
	0x14, 0x10, 0x15, 0x4a, 0x04, 0x08, 0x1b, 0x10, 0x1c, 0x4a, 0x04, 0x08, 0x18, 0x10, 0x19, 0x4a,
	0x04, 0x08, 0x19, 0x10, 0x1a, 0x4a, 0x04, 0x08, 0x1a, 0x10, 0x1b, 0x22, 0x81, 0x02, 0x0a, 0x1b,
	0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3f, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06, 0x69, 0x73, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x22,
	0xb1, 0x06, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09, 0x69, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x4b, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x63, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x16,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x11,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65,
	0x65, 0x12, 0x5d, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x13, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x12, 0x76, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x1a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x53,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x13, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a,
	0x16, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x02, 0x0a, 0x16, 0x4e,
	0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x76, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x56, 0x32, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08,
	0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x4e, 0x75,
	0x6d, 0x65, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x42, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x51, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04,
	0x08, 0x02, 0x10, 0x03, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa8, 0x01,
	0x0a, 0x13, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd0,
	0x01, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x62, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x42, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x32, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x3f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4e, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xb5, 0x01, 0x0a,
	0x22, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x46, 0x65, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x01, 0x0a, 0x21, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x0f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0xfc, 0x02, 0x0a, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x64, 0x32, 0x64, 0x5f, 0x6a, 0x74, 0x73,
	0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x52, 0x0f, 0x64, 0x32, 0x64, 0x4a, 0x74, 0x73, 0x50, 0x61, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x12, 0x50, 0x0a, 0x14, 0x64, 0x32, 0x64, 0x5f, 0x6a, 0x74, 0x73, 0x5f, 0x6e, 0x6f, 0x6e,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x52,
	0x12, 0x64, 0x32, 0x64, 0x4a, 0x74, 0x73, 0x4e, 0x6f, 0x6e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x6c, 0x61, 0x6a, 0x75, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x46, 0x65, 0x65, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x6c, 0x61, 0x6a, 0x75, 0x12, 0x36, 0x0a,
	0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x52, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0xd0, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x46, 0x65, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x0f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x46, 0x65, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a,
	0x1b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x17, 0x62, 0x75, 0x79, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x1b, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x47, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x19, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x44, 0x61, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x25, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x51, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x60, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x88, 0x02, 0x0a, 0x30, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x76, 0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x18, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22,
	0x97, 0x02, 0x0a, 0x24, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x1a,
	0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x69, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2a, 0xed, 0x01, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x50,
	0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45,
	0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x44,
	0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x02, 0x12,
	0x22, 0x0a, 0x1e, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49,
	0x43, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f,
	0x55, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x2a, 0x5f, 0x0a, 0x0b, 0x4e, 0x75, 0x6d,
	0x65, 0x72, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x55, 0x4d, 0x45,
	0x52, 0x49, 0x43, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49,
	0x43, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x45,
	0x4e, 0x54, 0x49, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x02, 0x42, 0x5e, 0x5a, 0x5c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65,
	0x6c, 0x6c, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x3b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_DeliveryManager_properties_proto_rawDescOnce sync.Once
	file_DeliveryManager_properties_proto_rawDescData = file_DeliveryManager_properties_proto_rawDesc
)

func file_DeliveryManager_properties_proto_rawDescGZIP() []byte {
	file_DeliveryManager_properties_proto_rawDescOnce.Do(func() {
		file_DeliveryManager_properties_proto_rawDescData = protoimpl.X.CompressGZIP(file_DeliveryManager_properties_proto_rawDescData)
	})
	return file_DeliveryManager_properties_proto_rawDescData
}

var file_DeliveryManager_properties_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_DeliveryManager_properties_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_DeliveryManager_properties_proto_goTypes = []interface{}{
	(DeliveryPropertyType)(0),                                // 0: deliverymanagerpb.DeliveryPropertyType
	(NumericUnit)(0),                                         // 1: deliverymanagerpb.NumericUnit
	(*DeliveryProperty)(nil),                                 // 2: deliverymanagerpb.DeliveryProperty
	(*SelfDeliveryPropertyOptions)(nil),                      // 3: deliverymanagerpb.SelfDeliveryPropertyOptions
	(*SelfDeliveryOption)(nil),                               // 4: deliverymanagerpb.SelfDeliveryOption
	(*TextPropertyPayload)(nil),                              // 5: deliverymanagerpb.TextPropertyPayload
	(*BooleanPropertyPayload)(nil),                           // 6: deliverymanagerpb.BooleanPropertyPayload
	(*NumericPropertyPayload)(nil),                           // 7: deliverymanagerpb.NumericPropertyPayload
	(*NumericPropertyOption)(nil),                            // 8: deliverymanagerpb.NumericPropertyOption
	(*DecimalPropertyPayload)(nil),                           // 9: deliverymanagerpb.DecimalPropertyPayload
	(*DecimalPropertyOption)(nil),                            // 10: deliverymanagerpb.DecimalPropertyOption
	(*BasePropertyPayload)(nil),                              // 11: deliverymanagerpb.BasePropertyPayload
	(*BasePropertyOption)(nil),                               // 12: deliverymanagerpb.BasePropertyOption
	(*ContactInformationPropertyPayload)(nil),                // 13: deliverymanagerpb.ContactInformationPropertyPayload
	(*ContactInformationPropertyOption)(nil),                 // 14: deliverymanagerpb.ContactInformationPropertyOption
	(*AddressPropertyPayload)(nil),                           // 15: deliverymanagerpb.AddressPropertyPayload
	(*AddressPropertyOption)(nil),                            // 16: deliverymanagerpb.AddressPropertyOption
	(*RegionPropertyPayload)(nil),                            // 17: deliverymanagerpb.RegionPropertyPayload
	(*RegionalDeliveryFeePropertyPayload)(nil),               // 18: deliverymanagerpb.RegionalDeliveryFeePropertyPayload
	(*PackageWeightRangePropertyPayload)(nil),                // 19: deliverymanagerpb.PackageWeightRangePropertyPayload
	(*DeliveryFee)(nil),                                      // 20: deliverymanagerpb.DeliveryFee
	(*PackageWeightRangePropertyOption)(nil),                 // 21: deliverymanagerpb.PackageWeightRangePropertyOption
	(*DeliveryFeePaymentPropertyPayload)(nil),                // 22: deliverymanagerpb.DeliveryFeePaymentPropertyPayload
	(*DeliveryFeePaymentPropertyOption)(nil),                 // 23: deliverymanagerpb.DeliveryFeePaymentPropertyOption
	(*DeliveryTypePropertyPayload)(nil),                      // 24: deliverymanagerpb.DeliveryTypePropertyPayload
	(*DeliveryTypePropertyOption)(nil),                       // 25: deliverymanagerpb.DeliveryTypePropertyOption
	(*CustomDeliveryProviderPropertyPayload)(nil),            // 26: deliverymanagerpb.CustomDeliveryProviderPropertyPayload
	(*GetCustomDeliveryProviderPropertyOptionsResponse)(nil), // 27: deliverymanagerpb.GetCustomDeliveryProviderPropertyOptionsResponse
	(*CustomDeliveryProviderPropertyOption)(nil),             // 28: deliverymanagerpb.CustomDeliveryProviderPropertyOption
}
var file_DeliveryManager_properties_proto_depIdxs = []int32{
	0,  // 0: deliverymanagerpb.DeliveryProperty.property_type:type_name -> deliverymanagerpb.DeliveryPropertyType
	5,  // 1: deliverymanagerpb.DeliveryProperty.text_property_payload:type_name -> deliverymanagerpb.TextPropertyPayload
	6,  // 2: deliverymanagerpb.DeliveryProperty.boolean_property_payload:type_name -> deliverymanagerpb.BooleanPropertyPayload
	7,  // 3: deliverymanagerpb.DeliveryProperty.numeric_property_payload:type_name -> deliverymanagerpb.NumericPropertyPayload
	9,  // 4: deliverymanagerpb.DeliveryProperty.decimal_property_payload:type_name -> deliverymanagerpb.DecimalPropertyPayload
	24, // 5: deliverymanagerpb.DeliveryProperty.delivery_type_property_payload:type_name -> deliverymanagerpb.DeliveryTypePropertyPayload
	17, // 6: deliverymanagerpb.DeliveryProperty.region_property_payload:type_name -> deliverymanagerpb.RegionPropertyPayload
	18, // 7: deliverymanagerpb.DeliveryProperty.regional_delivery_fee_property_payload:type_name -> deliverymanagerpb.RegionalDeliveryFeePropertyPayload
	22, // 8: deliverymanagerpb.DeliveryProperty.delivery_fee_payment_payload:type_name -> deliverymanagerpb.DeliveryFeePaymentPropertyPayload
	11, // 9: deliverymanagerpb.DeliveryProperty.base_property_payload:type_name -> deliverymanagerpb.BasePropertyPayload
	19, // 10: deliverymanagerpb.DeliveryProperty.package_weight_range_property_payload:type_name -> deliverymanagerpb.PackageWeightRangePropertyPayload
	13, // 11: deliverymanagerpb.DeliveryProperty.contact_information_property_payload:type_name -> deliverymanagerpb.ContactInformationPropertyPayload
	15, // 12: deliverymanagerpb.DeliveryProperty.address_property_payload:type_name -> deliverymanagerpb.AddressPropertyPayload
	26, // 13: deliverymanagerpb.DeliveryProperty.delivery_provider_property_payload:type_name -> deliverymanagerpb.CustomDeliveryProviderPropertyPayload
	24, // 14: deliverymanagerpb.SelfDeliveryPropertyOptions.delivery_type:type_name -> deliverymanagerpb.DeliveryTypePropertyPayload
	11, // 15: deliverymanagerpb.SelfDeliveryPropertyOptions.is_free:type_name -> deliverymanagerpb.BasePropertyPayload
	9,  // 16: deliverymanagerpb.SelfDeliveryPropertyOptions.delivery_fee:type_name -> deliverymanagerpb.DecimalPropertyPayload
	6,  // 17: deliverymanagerpb.SelfDeliveryOption.is_tracked:type_name -> deliverymanagerpb.BooleanPropertyPayload
	5,  // 18: deliverymanagerpb.SelfDeliveryOption.tracking_code:type_name -> deliverymanagerpb.TextPropertyPayload
	5,  // 19: deliverymanagerpb.SelfDeliveryOption.provider:type_name -> deliverymanagerpb.TextPropertyPayload
	9,  // 20: deliverymanagerpb.SelfDeliveryOption.integration_delivery_fee:type_name -> deliverymanagerpb.DecimalPropertyPayload
	9,  // 21: deliverymanagerpb.SelfDeliveryOption.sender_delivery_fee:type_name -> deliverymanagerpb.DecimalPropertyPayload
	9,  // 22: deliverymanagerpb.SelfDeliveryOption.receiver_delivery_fee:type_name -> deliverymanagerpb.DecimalPropertyPayload
	13, // 23: deliverymanagerpb.SelfDeliveryOption.receiver_contact_information:type_name -> deliverymanagerpb.ContactInformationPropertyPayload
	15, // 24: deliverymanagerpb.SelfDeliveryOption.receiver_address:type_name -> deliverymanagerpb.AddressPropertyPayload
	24, // 25: deliverymanagerpb.SelfDeliveryOption.delivery_type:type_name -> deliverymanagerpb.DeliveryTypePropertyPayload
	8,  // 26: deliverymanagerpb.NumericPropertyPayload.options:type_name -> deliverymanagerpb.NumericPropertyOption
	8,  // 27: deliverymanagerpb.NumericPropertyPayload.selected_option:type_name -> deliverymanagerpb.NumericPropertyOption
	1,  // 28: deliverymanagerpb.NumericPropertyPayload.unit_v2:type_name -> deliverymanagerpb.NumericUnit
	10, // 29: deliverymanagerpb.DecimalPropertyPayload.options:type_name -> deliverymanagerpb.DecimalPropertyOption
	10, // 30: deliverymanagerpb.DecimalPropertyPayload.selected_option:type_name -> deliverymanagerpb.DecimalPropertyOption
	1,  // 31: deliverymanagerpb.DecimalPropertyPayload.unit:type_name -> deliverymanagerpb.NumericUnit
	12, // 32: deliverymanagerpb.BasePropertyPayload.options:type_name -> deliverymanagerpb.BasePropertyOption
	12, // 33: deliverymanagerpb.BasePropertyPayload.selection_option:type_name -> deliverymanagerpb.BasePropertyOption
	14, // 34: deliverymanagerpb.ContactInformationPropertyPayload.options:type_name -> deliverymanagerpb.ContactInformationPropertyOption
	14, // 35: deliverymanagerpb.ContactInformationPropertyPayload.selected_option:type_name -> deliverymanagerpb.ContactInformationPropertyOption
	16, // 36: deliverymanagerpb.AddressPropertyPayload.options:type_name -> deliverymanagerpb.AddressPropertyOption
	16, // 37: deliverymanagerpb.AddressPropertyPayload.selected_option:type_name -> deliverymanagerpb.AddressPropertyOption
	12, // 38: deliverymanagerpb.RegionPropertyPayload.options:type_name -> deliverymanagerpb.BasePropertyOption
	12, // 39: deliverymanagerpb.RegionPropertyPayload.selected_option:type_name -> deliverymanagerpb.BasePropertyOption
	12, // 40: deliverymanagerpb.RegionalDeliveryFeePropertyPayload.options:type_name -> deliverymanagerpb.BasePropertyOption
	12, // 41: deliverymanagerpb.RegionalDeliveryFeePropertyPayload.selected_option:type_name -> deliverymanagerpb.BasePropertyOption
	21, // 42: deliverymanagerpb.PackageWeightRangePropertyPayload.options:type_name -> deliverymanagerpb.PackageWeightRangePropertyOption
	21, // 43: deliverymanagerpb.PackageWeightRangePropertyPayload.selected_option:type_name -> deliverymanagerpb.PackageWeightRangePropertyOption
	20, // 44: deliverymanagerpb.PackageWeightRangePropertyOption.d2d_jts_paperless:type_name -> deliverymanagerpb.DeliveryFee
	20, // 45: deliverymanagerpb.PackageWeightRangePropertyOption.d2d_jts_nonpaperless:type_name -> deliverymanagerpb.DeliveryFee
	20, // 46: deliverymanagerpb.PackageWeightRangePropertyOption.poslaju:type_name -> deliverymanagerpb.DeliveryFee
	20, // 47: deliverymanagerpb.PackageWeightRangePropertyOption.custom:type_name -> deliverymanagerpb.DeliveryFee
	23, // 48: deliverymanagerpb.DeliveryFeePaymentPropertyPayload.options:type_name -> deliverymanagerpb.DeliveryFeePaymentPropertyOption
	23, // 49: deliverymanagerpb.DeliveryFeePaymentPropertyPayload.selected_option:type_name -> deliverymanagerpb.DeliveryFeePaymentPropertyOption
	25, // 50: deliverymanagerpb.DeliveryTypePropertyPayload.options:type_name -> deliverymanagerpb.DeliveryTypePropertyOption
	25, // 51: deliverymanagerpb.DeliveryTypePropertyPayload.selected_option:type_name -> deliverymanagerpb.DeliveryTypePropertyOption
	25, // 52: deliverymanagerpb.DeliveryTypePropertyPayload.multiple_selected_options:type_name -> deliverymanagerpb.DeliveryTypePropertyOption
	28, // 53: deliverymanagerpb.CustomDeliveryProviderPropertyPayload.options:type_name -> deliverymanagerpb.CustomDeliveryProviderPropertyOption
	28, // 54: deliverymanagerpb.CustomDeliveryProviderPropertyPayload.selected_option:type_name -> deliverymanagerpb.CustomDeliveryProviderPropertyOption
	0,  // 55: deliverymanagerpb.GetCustomDeliveryProviderPropertyOptionsResponse.property_type:type_name -> deliverymanagerpb.DeliveryPropertyType
	26, // 56: deliverymanagerpb.GetCustomDeliveryProviderPropertyOptionsResponse.delivery_provider_property:type_name -> deliverymanagerpb.CustomDeliveryProviderPropertyPayload
	57, // [57:57] is the sub-list for method output_type
	57, // [57:57] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_DeliveryManager_properties_proto_init() }
func file_DeliveryManager_properties_proto_init() {
	if File_DeliveryManager_properties_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DeliveryManager_properties_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfDeliveryPropertyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfDeliveryOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericPropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecimalPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecimalPropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactInformationPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactInformationPropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressPropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionalDeliveryFeePropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageWeightRangePropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageWeightRangePropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryFeePaymentPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryFeePaymentPropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryTypePropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryTypePropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomDeliveryProviderPropertyPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomDeliveryProviderPropertyOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DeliveryManager_properties_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomDeliveryProviderPropertyOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_DeliveryManager_properties_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DeliveryProperty_TextPropertyPayload)(nil),
		(*DeliveryProperty_BooleanPropertyPayload)(nil),
		(*DeliveryProperty_NumericPropertyPayload)(nil),
		(*DeliveryProperty_DecimalPropertyPayload)(nil),
		(*DeliveryProperty_DeliveryTypePropertyPayload)(nil),
		(*DeliveryProperty_RegionPropertyPayload)(nil),
		(*DeliveryProperty_RegionalDeliveryFeePropertyPayload)(nil),
		(*DeliveryProperty_DeliveryFeePaymentPayload)(nil),
		(*DeliveryProperty_BasePropertyPayload)(nil),
		(*DeliveryProperty_PackageWeightRangePropertyPayload)(nil),
		(*DeliveryProperty_ContactInformationPropertyPayload)(nil),
		(*DeliveryProperty_AddressPropertyPayload)(nil),
		(*DeliveryProperty_DeliveryProviderPropertyPayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DeliveryManager_properties_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DeliveryManager_properties_proto_goTypes,
		DependencyIndexes: file_DeliveryManager_properties_proto_depIdxs,
		EnumInfos:         file_DeliveryManager_properties_proto_enumTypes,
		MessageInfos:      file_DeliveryManager_properties_proto_msgTypes,
	}.Build()
	File_DeliveryManager_properties_proto = out.File
	file_DeliveryManager_properties_proto_rawDesc = nil
	file_DeliveryManager_properties_proto_goTypes = nil
	file_DeliveryManager_properties_proto_depIdxs = nil
}
